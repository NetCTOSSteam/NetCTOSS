<!DOCTYPE web-app PUBLIC
 "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
 "http://java.sun.com/dtd/web-app_2_3.dtd" >

<web-app>
	<!-- 开启除了web层组件的另外一个容器，spring业务层容器 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:applicationContext.xml</param-value>
	</context-param>

	<!-- 修改webapp.root这个变量名为：SSM.root 作用是：可以做到每个系统，都有单独的项目部署路径，可以写在log4j.xml配置文件中，达到兼容操作系统的目的 -->
	<context-param>
		<param-name>webAppRootKey</param-name>
		<param-value>NetCTOSS.root</param-value>
	</context-param>

	<!-- 指定Log4j日志配置文件的位置 -->
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>classpath:log4j.xml</param-value>
	</context-param>

	<!-- spring容器间隔60秒，扫描1次log4j.xml配置文件，查看最新的变化 -->
	<context-param>
		<param-name>log4jRefreshInterval</param-name>
		<param-value>60000</param-value>
	</context-param>

	<!-- shiro过滤器定义 -->
	<filter>
		<filter-name>shiroFilter</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
		<init-param>
			<!-- 该值缺省为false,表示生命周期由SpringApplicationContext管理,设置为true则表示由ServletContainer管理 -->
			<param-name>targetFilterLifecycle</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>


	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>com.alibaba.NetCTOSS.filter.EncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>

	<filter>
		<filter-name>httpPutFormContentFilter</filter-name>
		<filter-class>org.springframework.web.filter.HttpPutFormContentFilter</filter-class>
	</filter>

	<filter>
		<filter-name>hiddenHttpMethodFilter</filter-name>
		<filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
	</filter>

	<filter>
		<filter-name>jpaFilter</filter-name>
		<filter-class>org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter</filter-class>
	</filter>

	<filter>
		<filter-name>HttpDeleteFormContentFilter</filter-name>
		<display-name>HttpDeleteFormContentFilter</display-name>
		<filter-class>com.alibaba.NetCTOSS.filter.HttpDeleteFormContentFilter</filter-class>
	</filter>

	<!-- <filter> <filter-name>URLFilter</filter-name> <display-name>URLFilter</display-name> 
		<filter-class>com.alibaba.NetCTOSS.filter.UrlFilter</filter-class> <init-param> 
		<param-name>filterURL</param-name> <param-value>/index.jsp</param-value> 
		</init-param> </filter> <filter-mapping> <filter-name>URLFilter</filter-name> 
		<url-pattern>/static/*</url-pattern> </filter-mapping> -->

	<filter-mapping>
		<filter-name>shiroFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<filter-mapping>
		<filter-name>httpPutFormContentFilter</filter-name>
		<servlet-name>dispatcherServlet</servlet-name>
	</filter-mapping>

	<filter-mapping>
		<filter-name>hiddenHttpMethodFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<filter-mapping>
		<filter-name>jpaFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<filter-mapping>
		<filter-name>HttpDeleteFormContentFilter</filter-name>
		<servlet-name>dispatcherServlet</servlet-name>
	</filter-mapping>
	
	<!-- <listener>
		<listener-class>org.apache.shiro.web.env.EnvironmentLoaderListener</listener-class>
	</listener> -->

	<!-- 使用ContextLoaderListener开启spring容器，为除了web层的组件提供一个运行环境， 并且将spring容器向web容器进行注册 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>
	<!-- 配置前端控制器，开启springmvc框架支持 -->
	<servlet>
		<servlet-name>dispatcherServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:spring-servlet.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>dispatcherServlet</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>

	<welcome-file-list>
		<welcome-file>login.jsp</welcome-file>
	</welcome-file-list>
</web-app>
