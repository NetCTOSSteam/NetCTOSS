<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
						http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context-3.0.xsd 
						http://www.springframework.org/schema/aop
						http://www.springframework.org/schema/aop/spring-aop-3.0.xsd 
						http://www.springframework.org/schema/tx
						http://www.springframework.org/schema/tx/spring-tx-3.0.xsd 
						http://www.springframework.org/schema/mvc
						http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
						http://www.springframework.org/schema/cache
       					http://www.springframework.org/schema/cache/spring-cache.xsd
       					http://www.springframework.org/schema/data/jpa
						http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">
						
	<!-- 
        Spring整合Quartz进行配置遵循下面的步骤：
        1：定义工作任务的Job
        2：定义触发器Trigger，并将触发器与工作任务绑定
        3：定义调度器，并将Trigger注册到Scheduler
     -->
    <!-- 1：定义任务的bean ，这里使用JobDetailFactoryBean,也可以使用MethodInvokingJobDetailFactoryBean ，配置类似-->
    <bean name="dayJob" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
        <!-- 指定job的名称 -->
        <property name="name" value="day_job"/>
        <!-- 指定job的分组 -->
        <property name="group" value="day_group"/>
        <!-- 指定具体的job类 -->
        <property name="jobClass" value="com.alibaba.NetCTOSS.quartz.BillDay"/>
        <!-- 必须设置为true，如果为false，当没有活动的触发器与之关联时会在调度器中会删除该任务  -->
        <property name="durability" value="true"/>
        <!-- 指定spring容器的key，如果不设定在job中的jobmap中是获取不到spring容器的 -->
        <property name="applicationContextJobDataKey" value="applicationContext"/>
    </bean>
    
    <bean name="monthJob" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
        <!-- 指定job的名称 -->
        <property name="name" value="month_job"/>
        <!-- 指定job的分组 -->
        <property name="group" value="month_group"/>
        <!-- 指定具体的job类 -->
        <property name="jobClass" value="com.alibaba.NetCTOSS.quartz.BillMonth"/>
        <!-- 必须设置为true，如果为false，当没有活动的触发器与之关联时会在调度器中会删除该任务  -->
        <property name="durability" value="true"/>
        <!-- 指定spring容器的key，如果不设定在job中的jobmap中是获取不到spring容器的 -->
        <property name="applicationContextJobDataKey" value="applicationContext"/>
    </bean>
    
    <bean name="yearJob" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
        <!-- 指定job的名称 -->
        <property name="name" value="year_job"/>
        <!-- 指定job的分组 -->
        <property name="group" value="year_group"/>
        <!-- 指定具体的job类 -->
        <property name="jobClass" value="com.alibaba.NetCTOSS.quartz.BillYear"/>
        <!-- 必须设置为true，如果为false，当没有活动的触发器与之关联时会在调度器中会删除该任务  -->
        <property name="durability" value="true"/>
        <!-- 指定spring容器的key，如果不设定在job中的jobmap中是获取不到spring容器的 -->
        <property name="applicationContextJobDataKey" value="applicationContext"/>
    </bean>
    <!-- 2.1：定义触发器的bean，定义一个Simple的Trigger，一个触发器只能和一个任务进行绑定 -->
    <!-- 2.2：定义触发器的bean，定义一个Cron的Trigger，一个触发器只能和一个任务进行绑定 -->
    
    <bean id="cronTriggerday" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <!-- 指定Trigger的名称 -->
        <property name="name" value="day_trigger"/>
        <!-- 指定Trigger的名称 -->
        <property name="group" value="day_trigger_group"/>
        <!-- 指定Tirgger绑定的Job -->
        <property name="jobDetail" ref="dayJob"/>
        <!-- 指定Cron 的表达式 ，每天晚上运行 59 59 23 ? * *-->
        <property name="cronExpression" value="0 0/1 * * * ?" />
    </bean>
    
    <bean id="cronTriggermonth" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <!-- 指定Trigger的名称 -->
        <property name="name" value="month_trigger"/>
        <!-- 指定Trigger的名称 -->
        <property name="group" value="month_trigger_group"/>
        <!-- 指定Tirgger绑定的Job -->
        <property name="jobDetail" ref="monthJob"/>
        <!-- 指定Cron 的表达式 ，次月一日早上运行  59 59 23 ? * *-->
        <property name="cronExpression" value=" 59 59 23 ? * *" />
    </bean>
    
    <bean id="cronTriggeryear" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <!-- 指定Trigger的名称 -->
        <property name="name" value="year_trigger"/>
        <!-- 指定Trigger的名称 -->
        <property name="group" value="year_trigger_group"/>
        <!-- 指定Tirgger绑定的Job -->
        <property name="jobDetail" ref="yearJob"/>
        <!-- 指定Cron 的表达式 ，次年年的一月二日运行-->
        <property name="cronExpression" value="59 59 11 1 1 ?" />
    </bean>

 <!-- 目的  将spring 管理的bean 注入quart 的 job  定时任务的factorybean,配置其他config -->  
    <!-- 3.定义调度器，并将Trigger注册到调度器中 -->
    <bean id="scheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
         
        <property name="triggers">
            <list>
                <!-- <ref bean="simpleTrigger"/> -->
                <ref bean="cronTriggerday"/>
                <ref bean="cronTriggermonth"/>
                <ref bean="cronTriggeryear"/>
            </list>
        </property>
         <!-- 所有Scheduler 延迟5s 启动 -->
        <property name="startupDelay" value="5"/>
       <property name="jobFactory">
            <bean class="com.alibaba.NetCTOSS.quartz.JobFactory" />
        </property>
    </bean>
    
</beans>