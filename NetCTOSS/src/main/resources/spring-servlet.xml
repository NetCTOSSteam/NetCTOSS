<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">

	<!-- 开启自动扫描 -->
	<context:component-scan base-package="com.alibaba.NetCTOSS">
		<!-- 只管理表现层组件 -->
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Service" />
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Repository" />
	</context:component-scan>

	<!-- 开启springmvc注解支持 ，并引入类型转换器和springMVC的验证框架 -->
	<mvc:annotation-driven conversion-service="converters"
		validator="validatorFactory"></mvc:annotation-driven>

	<!-- 告知静态资源包，作用：通知前端控制器，凡是静态资源的请求， 无需调度到HandleMapping中，而是直接去读取就可以了 -->
	<mvc:resources location="/static/" mapping="/static/**" />

	<!-- 这里可以接着配置拦截器 -->
	<!-- 拦截器 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/*/login"/>
			<bean class="com.alibaba.NetCTOSS.Interceptor.LogInterceptor"></bean>
		</mvc:interceptor>
	</mvc:interceptors>
	
	<!-- 将hibernate的验证框架，纳入到spring容器中 -->
	<bean id="validatorFactory"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<property name="providerClass" value="org.hibernate.validator.HibernateValidator"></property>
	</bean>

	<!-- 向spring容器中的转换服务工具类中，添加新的转换规则 ID不能使用conversionService, 可能引发mvc:resources冲突 -->
	<bean id="converters"
		class="org.springframework.context.support.ConversionServiceFactoryBean">
		<property name="converters">
			<set>
				<bean class="com.alibaba.NetCTOSS.util.GolbalUtilDateConverter"></bean>
			</set>
		</property>
	</bean>

	  <!-- 文件上传解析器,ID固定为multipartResolver -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- maxUploadSize 单次文件上传的总内容大小，-1表示没有限制，100*1024*1024 代表100M，单位是：byte -->
		<property name="maxUploadSize" value="104857600"></property>
		<!-- maxUploadSizePerFile 单次文件上传的单个内容大小，-1表示没有限制，10*1024*1024 代表10M，单位是：byte -->
		<property name="maxUploadSizePerFile" value="10485760"></property>
		<!-- 每次读取时，只读取1024个字节 -->
		<property name="maxInMemorySize" value="1024"></property>
		<!-- 默认字符集 -->
		<property name="defaultEncoding" value="UTF-8"></property>
		<!-- uploadTempDir 表示文件上传时，存放临时文件的目录，默认采用WEB容器的临时目录，也可以自己修改，例如：D://tmp -->
	</bean>

	<!-- 视图解析器 -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/"></property>
		<property name="suffix" value=".jsp"></property>
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView"></property>
	</bean>
</beans>